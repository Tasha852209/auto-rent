{"version":3,"file":"static/js/245.3eb1b97a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/kit/Section/Section.scss?f646","components/kit/Section/Section.jsx","redux/filters/filtersSelectors.js","utils/formatingCommasToNumber.js","components/kit/FromToField/FromToField.jsx","images/icons/ChevronDownIcon.jsx","components/kit/SelectField/SelectField.jsx","components/Filter/Filter.jsx","images/icons/HeartIcon.jsx","components/kit/DescriptionList/DescriptionList.jsx","images/icons/CloseIcon.jsx","components/Modal/Modal.jsx","utils/getOnlyFirstUpperLetter.js","components/kit/DescriptionChipList/DescriptionChipList.jsx","components/CarModalCard/CarModalCard.jsx","utils/getCarDescriptionList.js","components/CarCard/CarCard.jsx","hook/useDisableBodyScroll.js","components/AdvertsList/AdvertsList.jsx","pages/Catalog/Catalog.jsx","utils/createArrayWithStep.js","utils/getFilteredAdverts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"fontSize\":\"12px\",\"headingsFontSize\":\"18px\",\"headingsSecondFontSize\":\"14px\",\"standartSize\":\"16px\",\"bgColor\":\"#fff\",\"bgDarkColor\":\"#262626\",\"bgSecondColor\":\"#f7f7fb\",\"headingsColor\":\"#121417\",\"headingsSecondColor\":\"#8a8a89\",\"descColor\":\"rgba(18,20,23,.5)\",\"descSecondColor\":\"#000\",\"accentColor\":\"#3470ff\",\"hoverColor\":\"#0b44cd\",\"borderColor\":\"rgba(18,20,23,.1)\",\"whiteColor\":\"#fff\",\"blackColor\":\"#121417\",\"desktop\":\"91.25em\"};","import './Section.scss';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className=\"section\">\n      {title && <h2 className=\"section__title\">{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","export const selectAdvertsFilter = (state) => state.filters;\n","export const formatingCommasToNumber = (stringNumbers) => {\n  const stringWithoutCommas = stringNumbers.replace(/,/g, \"\");\n\n  if (stringWithoutCommas.length > 3) {\n    const parts = [];\n\n    for (let i = stringWithoutCommas.length; i > 0; i -= 3) {\n      parts.unshift(stringWithoutCommas.slice(Math.max(i - 3, 0), i));\n    }\n\n    return parts.join(\",\");\n  } else {\n    return stringWithoutCommas;\n  }\n};\n\nexport const removeCommasFromString = (stringNumbers) => {\n  const stringWithoutCommas = stringNumbers.replace(/,/g, \"\");\n\n  return stringWithoutCommas;\n};\n","import { useState } from 'react';\n\nimport { toast } from 'react-toastify';\n\nimport { formatingCommasToNumber } from 'utils/formatingCommasToNumber';\n\nimport './FromToField.scss';\n\nconst FromToField = props => {\n  const {\n    id = 'text-input',\n    label = 'label',\n    value = { from: '', to: '' },\n  } = props;\n\n  const [fieldValue, setFieldValue] = useState(value);\n\n  const onChange = e => {\n    if (!/^[0-9,]+$/.test(e.target.value) && e.target.value.trim()) {\n      toast.warn('Please write only numbers');\n      return;\n    }\n\n    setFieldValue(prev => ({\n      ...prev,\n      [e.target.name]: formatingCommasToNumber(e.target.value),\n    }));\n  };\n\n  return (\n    <div className=\"input-fromto-field__group\">\n      <p>{label}</p>\n      <div className=\"input-fromto__container\">\n        <div className=\"input-fromto__wrapper\">\n          <label htmlFor={`${id}_from`}>From</label>\n          <input\n            name={'from'}\n            value={fieldValue.from}\n            className=\"input__from\"\n            id={`${id}_from`}\n            type=\"text\"\n            onChange={onChange}\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"input-fromto__wrapper\">\n          <label htmlFor={`${id}_to`}>To</label>\n          <input\n            name={'to'}\n            value={fieldValue.to}\n            className=\"input__to\"\n            id={`${id}_to`}\n            type=\"text\"\n            onChange={onChange}\n            autoComplete=\"off\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FromToField;\n","import * as React from \"react\";\nconst ChevronDownIcon = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"m5 7.5 5 5 5-5\"\n    />\n  </svg>\n);\nexport default ChevronDownIcon;\n","import { useEffect, useState } from 'react';\n\nimport ChevronDownIcon from 'images/icons/ChevronDownIcon';\n\nimport './SelectField.scss';\n\nconst SelectField = props => {\n  const { name, id, label, placeholder = 'Enter the text', optionList } = props;\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = value => () => {\n    setSelectedOption(value);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        setIsOpen(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [isOpen]);\n\n  return (\n    <div className=\"dropdown__cotainer\">\n      <p className=\"dropdown__label\">{label}</p>\n      <div className=\"dropdown__select\">\n        <div\n          className={`dropdown__header ${isOpen ? 'dropdown__open' : ''}`}\n          onClick={toggling}\n        >\n          <input\n            type=\"text\"\n            id={id}\n            name={name}\n            value={selectedOption || placeholder}\n            readOnly={true}\n            className=\"dropdown__select--input\"\n          />\n          <ChevronDownIcon />\n        </div>\n        {isOpen && (\n          <div className=\"dropdown__list-container\">\n            <ul className=\"dropdown__list\">\n              {optionList.map(option => (\n                <li\n                  name={name}\n                  onClick={onOptionClicked(option)}\n                  key={Math.random()}\n                  className=\"dropdown__item\"\n                >\n                  {option}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectField;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectAdvertsFilter } from '../../redux/filters/filtersSelectors';\nimport { setAdvertsFilter } from '../../redux/filters/filtersSlice';\n\nimport { removeCommasFromString } from 'utils/formatingCommasToNumber';\n\nimport FromToField from 'components/kit/FromToField/FromToField';\nimport SelectField from 'components/kit/SelectField/SelectField';\n\nimport './Filter.scss';\nimport { toast } from 'react-toastify';\n\nconst Filter = ({ filtersList }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectAdvertsFilter);\n\n  const handleChangeFilter = e => {\n    e.preventDefault();\n\n    const { brand, price, from, to } = e.target.elements;\n\n    if (\n      (!brand.value || brand.value === 'Enter the text') &&\n      (!price.value || price.value === 'To $') &&\n      !from.value &&\n      !to.value\n    ) {\n      toast.info('Please chose one of filters');\n      return;\n    }\n\n    const newfilters = {\n      [brand.name]: brand.value !== 'Enter the text' ? brand.value : '',\n      [price.name]: price.value !== 'To $' ? price.value : '',\n      mileage: {\n        from: removeCommasFromString(from.value),\n        to: removeCommasFromString(to.value),\n      },\n      prices: [],\n    };\n\n    dispatch(setAdvertsFilter(newfilters));\n  };\n\n  return (\n    <form className=\"filter\" onSubmit={handleChangeFilter}>\n      <SelectField\n        name=\"brand\"\n        label=\"Car brand\"\n        value={filter.brand}\n        optionList={filtersList.brands}\n      />\n      <SelectField\n        name=\"price\"\n        label=\"Price/ 1 hour\"\n        placeholder=\"To $\"\n        value={filter.price}\n        optionList={filtersList.prices}\n      />\n      <FromToField\n        name=\"mileage\"\n        label=\"Сar mileage / km\"\n        value={filter.mileage}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default Filter;\n","import * as React from \"react\";\nconst HeartIcon = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeOpacity={0.8}\n      strokeWidth={1.5}\n      d=\"M15.63 3.458a4.125 4.125 0 0 0-5.835 0L9 4.253l-.795-.795A4.126 4.126 0 0 0 2.37 9.293l.795.795L9 15.922l5.835-5.835.795-.795a4.125 4.125 0 0 0 0-5.835Z\"\n    />\n  </svg>\n);\nexport default HeartIcon;\n","import './DescriptionList.scss';\n\nconst DescriptionList = ({ list = [], size = 'large' }) => {\n  return (\n    <ul className={`description__list ${size}`}>\n      {list.map(item => (\n        <li key={`${item}_${Math.random(1)}`}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default DescriptionList;\n","import * as React from \"react\";\nconst CloseIcon = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    {...props}\n  >\n    <g\n      stroke=\"#121417\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.8}\n    >\n      <path d=\"M18 6 6 18M6 6l12 12\" />\n    </g>\n  </svg>\n);\nexport default CloseIcon;\n","import { useEffect } from 'react';\n\nimport CloseIcon from 'images/icons/CloseIcon';\n\nimport './Modal.scss';\n\nconst Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <div className=\"overlay\" onClick={handleBackdropClick}>\n      <div className=\"modal__content\">\n        <button type=\"button\" className=\"modal__close-btn\">\n          <CloseIcon\n            onClick={() => {\n              onCloseModal();\n            }}\n          />\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","export const getOnlyFirstUpperLetter = (word) => {\n  if (typeof word !== \"string\") return;\n\n  const capFirstLetter = word[0].toUpperCase();\n  const restOfWordLower = word.slice(1).toLowerCase();\n\n  const result = capFirstLetter + restOfWordLower;\n  return result;\n};\n","import './DescriptionChipList.scss';\n\nconst DescriptionChipList = ({ list }) => {\n  return (\n    <ul className=\"chip__list\">\n      {list.map(item => {\n        let [name, number] = item.split(': ');\n        if (typeof number === 'string') {\n          const newNumber = number.replace(/(\\$)(\\d+)/, '$2$1');\n          number = newNumber;\n        }\n\n        return (\n          <li className=\"chip__item\" key={name}>\n            {!number ? name : `${name}: `}\n            {number && <span>{number}</span>}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default DescriptionChipList;\n","import { getCarDetailsDescList } from 'utils/getCarDescriptionList';\nimport { formatingCommasToNumber } from 'utils/formatingCommasToNumber';\n\nimport DescriptionList from '../kit/DescriptionList/DescriptionList';\nimport DescriptionChipList from '../kit/DescriptionChipList/DescriptionChipList';\n\nimport './CarModalCard.scss';\n\nfunction CarModalCard({ car }) {\n  const {\n    img,\n    make,\n    model,\n    year,\n    description,\n    accessories,\n    functionalities,\n    rentalConditions,\n    mileage,\n    rentalPrice,\n  } = car;\n  const descriptionList = getCarDetailsDescList(car);\n\n  const rentalConditionsArray = [\n    ...rentalConditions.split('\\n'),\n    `Milage: ${formatingCommasToNumber(mileage.toString())}`,\n    `Price: ${rentalPrice}`,\n  ];\n\n  return (\n    <div className=\"card-modal\">\n      <img\n        className=\"card-modal__img\"\n        src={img}\n        aria-label={`${make} ${model}`}\n      />\n      <div className=\"card-modal__car-header\">\n        <h3>\n          {`${make} `}\n          <span>{model}</span>\n          {`, ${year}`}\n        </h3>\n        <DescriptionList list={descriptionList} size=\"medium\" />\n        <p>{description}</p>\n      </div>\n\n      <div className=\"card-modal__accessories\">\n        <h4>Accessories and functionalities:</h4>\n        <div>\n          <DescriptionList list={accessories} />\n          <DescriptionList list={functionalities} />\n        </div>\n      </div>\n      <div className=\"card-modal__rental-conditions\">\n        <h4>Rental Conditions:</h4>\n        <DescriptionChipList list={rentalConditionsArray} />\n      </div>\n      <a className=\"card-modal__btn\" href=\"tel:+380730000000\">\n        Rental Car\n      </a>\n    </div>\n  );\n}\n\nexport default CarModalCard;\n","import { getOnlyFirstUpperLetter } from \"./getOnlyFirstUpperLetter\";\n\nexport const getCarDescList = ({\n  address,\n  rentalCompany,\n  typeClass = \"Premium\",\n  type,\n  model,\n  id,\n  functionalities,\n}) => {\n  const carAddress = address.split(\",\");\n  const carCity = carAddress[1].trim();\n  const carCountry = carAddress[2].trim();\n  const carRentalCompany = rentalCompany;\n  const carClass = typeClass;\n  const carType = `${getOnlyFirstUpperLetter(type)}`.trim();\n  const carModel = model;\n  const carId = `${id}`.trim();\n  const catFunctionality = functionalities[0];\n\n  const result = [\n    carCity,\n    carCountry,\n    carRentalCompany,\n    carClass,\n    carType,\n    carModel,\n    carId,\n    catFunctionality,\n  ];\n  return result;\n};\n\nexport const getCarDetailsDescList = ({\n  address,\n  id,\n  year,\n  type,\n  fuelConsumption,\n  engineSize,\n}) => {\n  const carAddress = address.split(\",\");\n  const carCity = carAddress[1].trim();\n  const carCountry = carAddress[2].trim();\n  const carId = `Id: ${id}`.trim();\n  const carYear = `Year: ${year}`.trim();\n  const carType = `Type: ${getOnlyFirstUpperLetter(type)}`.trim();\n  const carFuelConsumption = `Fuel Consumption: ${fuelConsumption}`.trim();\n  const carEngineSize = `Engine Size: ${engineSize}`.trim();\n\n  const result = [\n    carCity,\n    carCountry,\n    carId,\n    carYear,\n    carType,\n    carFuelConsumption,\n    carEngineSize,\n  ];\n  return result;\n};\n","import { useState } from 'react';\n\nimport { toast } from 'react-toastify';\n\nimport HeartIcon from 'images/icons/HeartIcon';\n\nimport './CarCard.scss';\nimport DescriptionList from 'components/kit/DescriptionList/DescriptionList';\nimport Modal from 'components/Modal/Modal';\nimport CarModalCard from 'components/CarModalCard/CarModalCard';\nimport { useUpdateFavoriteAdvertByIdMutation } from '../../redux/adverts/advertsSlice';\nimport { useDisableBodyScroll } from 'hook/useDisableBodyScroll';\nimport { getCarDescList } from 'utils/getCarDescriptionList';\n\nconst CarCard = ({ car }) => {\n  const { id, img, make, model, year, rentalPrice, favorite } = car;\n\n  const [isShowModal, setIsShowModal] = useState(false);\n\n  const [updateFavoriteAdvertById] = useUpdateFavoriteAdvertByIdMutation();\n  useDisableBodyScroll(isShowModal);\n\n  const descriptionList = getCarDescList(car);\n\n  const handleToggleModal = () => {\n    setIsShowModal(prev => !prev);\n  };\n\n  const handleToggleFavorite = async id => {\n    try {\n      updateFavoriteAdvertById({ id, favorite: !favorite });\n    } catch (error) {\n      toast.warn('Sorry something wrong');\n    }\n  };\n\n  return (\n    <li>\n      <div className=\"card\">\n        <div className=\"card__wrapper\">\n          <div className=\"card__thumb-img\">\n            <img src={img} alt={make} loading=\"lazy\" />\n            <button type=\"button\" onClick={() => handleToggleFavorite(id)}>\n              <HeartIcon className={favorite ? 'favorited' : ''} />\n            </button>\n          </div>\n          <div className=\"card__thumb-title\">\n            <h3>\n              {`${make} `}\n              <span>{model}</span>\n              {`, ${year}`}\n            </h3>\n            <p>{rentalPrice}</p>\n          </div>\n          <DescriptionList list={descriptionList} size=\"small\" />\n        </div>\n\n        <button type=\"button\" className=\"card__btn\" onClick={handleToggleModal}>\n          Learn more\n        </button>\n      </div>\n      {isShowModal && (\n        <Modal onCloseModal={handleToggleModal}>\n          <CarModalCard car={car} />\n        </Modal>\n      )}\n    </li>\n  );\n};\n\nexport default CarCard;\n","import { useEffect } from \"react\";\n\nexport const useDisableBodyScroll = (open) => {\n  useEffect(() => {\n    if (open) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n  }, [open]);\n};\n","import CarCard from 'components/CarCard/CarCard';\n\nimport './AdvertsList.scss';\n\nconst AdvertsList = ({ list = [] }) => {\n  return list.length ? (\n    <ul className=\"adverts__list\">\n      {list.map(item => (\n        <CarCard key={`${item.make}_${Math.random(1)}`} car={item} />\n      ))}\n    </ul>\n  ) : (\n    <p className=\"adverts__no-content\">\n      Sorry, there are no cars with this request in stock...\n    </p>\n  );\n};\n\nexport default AdvertsList;\n","import { useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport './Catalog.scss';\nimport { selectAdvertsFilter } from '../../redux/filters/filtersSelectors';\nimport { useGetAdvertsQuery } from '../../redux/adverts/advertsSlice';\nimport { getFilteredAdverts } from 'utils/getFilteredAdverts';\nimport { createArrayWithStep } from 'utils/createArrayWithStep';\nimport Section from 'components/kit/Section/Section';\nimport Loader from 'components/kit/Loader/Loader';\nimport Filter from 'components/Filter/Filter';\nimport AdvertsList from 'components/AdvertsList/AdvertsList';\n\nconst Catalog = () => {\n  const filter = useSelector(selectAdvertsFilter);\n  const { data: adverts, isLoading } = useGetAdvertsQuery();\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  let dataFilters = {\n    brands: [],\n    prices: [],\n  };\n  let visibleAdverts = useMemo(() => {}, []);\n\n  const limitAdverts = 12;\n  let totalAdverts = 0;\n  let totalPages = 0;\n\n  if (!isLoading) {\n    visibleAdverts = getFilteredAdverts(adverts, filter);\n    dataFilters = {\n      brands: ['All', ...new Set(adverts.map(({ make }) => make))],\n      prices: createArrayWithStep(\n        0,\n        Math.max(\n          ...new Set(\n            adverts.map(({ rentalPrice }) => rentalPrice.replace(/(\\$)/, ''))\n          )\n        ),\n        10\n      ),\n    };\n\n    totalAdverts = visibleAdverts.length;\n    totalPages = !totalAdverts ? 1 : Math.ceil(totalAdverts / limitAdverts);\n  }\n\n  const currentAdvertsData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * limitAdverts;\n    const lastPageIndex = firstPageIndex + limitAdverts;\n\n    return visibleAdverts?.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, visibleAdverts]);\n\n  const handleClickLoadMore = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prev => prev + 1);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  return (\n    <Section>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <>\n          <Filter filtersList={dataFilters} />\n          <AdvertsList list={currentAdvertsData} />\n          <div className=\"buttons__wrapper\">\n            {totalPages > currentPage && (\n              <button\n                type=\"button\"\n                className=\"load-more__btn\"\n                onClick={handleClickLoadMore}\n              >\n                Load more\n              </button>\n            )}\n          </div>\n        </>\n      )}\n    </Section>\n  );\n};\n\nexport default Catalog;\n","export const createArrayWithStep = (start, end, step) => {\n  return Array.from(\n    { length: Math.floor((end - start) / step) + 1 },\n    (_, index) => start + index * step\n  );\n};\n","export const getFilteredAdverts = (adverts, filters) => {\n  return adverts.filter((car) => {\n    if (\n      filters.brand &&\n      car.make !== filters.brand &&\n      filters.brand !== \"All\"\n    ) {\n      return false;\n    }\n\n    if (\n      filters.price &&\n      Number(car.rentalPrice.replace(/(\\$)/, \"\")) > Number(filters.price)\n    ) {\n      return false;\n    }\n\n    if (filters.mileage.from.trim() || filters.mileage.to.trim()) {\n      const { from, to } = filters.mileage;\n      const carMileage = Number(car.mileage);\n\n      if (\n        (from !== undefined && carMileage < Number(from)) ||\n        (to !== undefined && carMileage > Number(to))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n"],"names":["_ref","title","children","_jsxs","className","_jsx","selectAdvertsFilter","state","filters","formatingCommasToNumber","stringNumbers","stringWithoutCommas","replace","length","parts","i","unshift","slice","Math","max","join","removeCommasFromString","props","_props$id","id","_props$label","label","_props$value","value","from","to","_useState","useState","_useState2","_slicedToArray","fieldValue","setFieldValue","onChange","e","test","target","trim","prev","_objectSpread","_defineProperty","name","toast","htmlFor","concat","type","autoComplete","xmlns","width","height","fill","strokeLinecap","strokeLinejoin","strokeWidth","d","_props$placeholder","placeholder","optionList","isOpen","setIsOpen","_useState3","_useState4","selectedOption","setSelectedOption","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","onClick","readOnly","ChevronDownIcon","map","option","random","filtersList","dispatch","useDispatch","filter","useSelector","onSubmit","_newfilters","preventDefault","_e$target$elements","elements","brand","price","newfilters","setAdvertsFilter","SelectField","brands","prices","FromToField","mileage","strokeOpacity","_ref$list","list","_ref$size","size","item","stroke","onCloseModal","_ref2","currentTarget","CloseIcon","getOnlyFirstUpperLetter","word","toUpperCase","toLowerCase","_item$split","split","_item$split2","number","newNumber","car","img","make","model","year","description","accessories","functionalities","rentalConditions","rentalPrice","descriptionList","address","fuelConsumption","engineSize","carAddress","getCarDetailsDescList","rentalConditionsArray","_toConsumableArray","toString","src","DescriptionList","DescriptionChipList","href","open","favorite","isShowModal","setIsShowModal","_useUpdateFavoriteAdv","useUpdateFavoriteAdvertByIdMutation","updateFavoriteAdvertById","document","body","style","overflow","rentalCompany","_ref$typeClass","typeClass","getCarDescList","handleToggleModal","handleToggleFavorite","_asyncToGenerator","_regeneratorRuntime","_callee","_context","next","error","stop","_x","apply","arguments","alt","loading","HeartIcon","Modal","CarModalCard","CarCard","start","end","step","_useGetAdvertsQuery","useGetAdvertsQuery","adverts","data","isLoading","currentPage","setCurrentPage","dataFilters","visibleAdverts","useMemo","totalAdverts","totalPages","Number","_filters$mileage","carMileage","undefined","getFilteredAdverts","Set","Array","floor","_","index","ceil","currentAdvertsData","_visibleAdverts","firstPageIndex","lastPageIndex","Section","Loader","_Fragment","Filter","AdvertsList","scrollTo"],"sourceRoot":""}