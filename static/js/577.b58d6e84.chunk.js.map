{"version":3,"file":"static/js/577.b58d6e84.chunk.js","mappings":"0PAkBA,EAjBkB,SAACA,GAAK,OACtBC,EAAAA,EAAAA,KAAA,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDN,GAAK,IAAAO,UAETN,EAAAA,EAAAA,KAAA,QACEO,cAAc,QACdC,eAAe,QACfC,cAAe,GACfC,YAAa,IACbC,EAAE,+JAEA,ECJR,EAVwB,SAAHC,GAAuC,IAADC,EAAAD,EAAhCE,KAAAA,OAAI,IAAAD,EAAG,GAAEA,EAAAE,EAAAH,EAAEI,KAAAA,OAAI,IAAAD,EAAG,QAAOA,EAClD,OACEf,EAAAA,EAAAA,KAAA,MAAIiB,UAAS,qBAAAC,OAAuBF,GAAOV,SACxCQ,EAAKK,KAAI,SAAAC,GAAI,OACZpB,EAAAA,EAAAA,KAAA,MAAAM,SAAuCc,GAAI,GAAAF,OAA/BE,EAAI,KAAAF,OAAIG,KAAKC,OAAO,IAAiB,KAIzD,ECSA,EAlBkB,SAACvB,GAAK,OACtBC,EAAAA,EAAAA,KAAA,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDN,GAAK,IAAAO,UAETN,EAAAA,EAAAA,KAAA,KACEuB,OAAO,UACPhB,cAAc,QACdC,eAAe,QACfE,YAAa,IAAIJ,UAEjBN,EAAAA,EAAAA,KAAA,QAAMW,EAAE,6BAEN,EC0BR,EArCc,SAAHC,GAAoC,IAA9BN,EAAQM,EAARN,SAAUkB,EAAYZ,EAAZY,cACzBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACL,WAAXA,EAAEC,MACJJ,GAEJ,EAIA,OAFAK,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACxC,CACF,GAAG,CAACF,IAQJ,OACExB,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,UAAUe,QAPC,SAAHC,GAAmC,IAA7BC,EAAMD,EAANC,OAAqBD,EAAbE,gBACfD,GACpBV,GAEJ,EAGwDlB,UACpD8B,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,iBAAgBX,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAASpB,UAAU,mBAAkBX,UAChDN,EAAAA,EAAAA,KAACsC,EAAS,CACRN,QAAS,WACPR,GACF,MAGHlB,MAIT,E,UCzCaiC,EAA0B,SAACC,GACtC,GAAoB,kBAATA,EAMX,OAJuBA,EAAK,GAAGC,cACPD,EAAKE,MAAM,GAAGC,aAIxC,E,UCeA,EArB4B,SAAH/B,GAAkB,IAAZE,EAAIF,EAAJE,KAC7B,OACEd,EAAAA,EAAAA,KAAA,MAAIiB,UAAU,aAAYX,SACvBQ,EAAKK,KAAI,SAAAC,GACR,IAAAwB,EAAqBxB,EAAKyB,MAAM,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAMH,EAAA,GACjB,GAAsB,kBAAXG,EAAqB,CAC9B,IAAMC,EAAYD,EAAOE,QAAQ,YAAa,QAC9CF,EAASC,CACX,CAEA,OACEd,EAAAA,EAAAA,MAAA,MAAInB,UAAU,aAAYX,SAAA,CACtB2C,EAAa,GAAA/B,OAAM8B,EAAI,MAAdA,EACVC,IAAUjD,EAAAA,EAAAA,KAAA,QAAAM,SAAO2C,MAFYD,EAKpC,KAGN,EC2CA,MAxDA,SAAqBpC,GAAW,IAARwC,EAAGxC,EAAHwC,IAEpBC,EAUED,EAVFC,IACAC,EASEF,EATFE,KACAC,EAQEH,EARFG,MACAC,EAOEJ,EAPFI,KACAC,EAMEL,EANFK,YACAC,EAKEN,EALFM,YACAC,EAIEP,EAJFO,gBACAC,EAGER,EAHFQ,iBACAC,EAEET,EAFFS,QACAC,EACEV,EADFU,YAEIC,ECa6B,SAAH9B,GAO3B,IANL+B,EAAO/B,EAAP+B,QACAC,EAAEhC,EAAFgC,GACAT,EAAIvB,EAAJuB,KACAnB,EAAIJ,EAAJI,KACA6B,EAAejC,EAAfiC,gBACAC,EAAUlC,EAAVkC,WAEMC,EAAaJ,EAAQnB,MAAM,KAkBjC,MATe,CARCuB,EAAW,GAAGC,OACXD,EAAW,GAAGC,OACnB,OAAAnD,OAAO+C,GAAKI,OACV,SAAAnD,OAASsC,GAAOa,OAChB,SAAAnD,OAASqB,EAAwBF,IAAQgC,OAC9B,qBAAAnD,OAAqBgD,GAAkBG,OAC5C,gBAAAnD,OAAgBiD,GAAaE,OAYrD,CDxC0BC,CAAsBlB,GAExCmB,EAAqB,GAAArD,QAAAsD,EAAAA,EAAAA,GACtBZ,EAAiBf,MAAM,OAAK,YAAA3B,QACpBuD,EAAAA,EAAAA,GAAwBZ,EAAQa,aAAW,UAAAxD,OAC5C4C,KAGZ,OACE1B,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,aAAYX,SAAA,EACzBN,EAAAA,EAAAA,KAAA,OACEiB,UAAU,kBACV0D,IAAKtB,EACL,gBAAAnC,OAAeoC,EAAI,KAAApC,OAAIqC,MAEzBnB,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,yBAAwBX,SAAA,EACrC8B,EAAAA,EAAAA,MAAA,MAAA9B,SAAA,IAAAY,OACMoC,EAAI,MACRtD,EAAAA,EAAAA,KAAA,QAAAM,SAAOiD,IAAa,KAAArC,OACdsC,OAERxD,EAAAA,EAAAA,KAAC4E,EAAe,CAAC9D,KAAMiD,EAAiB/C,KAAK,YAC7ChB,EAAAA,EAAAA,KAAA,KAAAM,SAAImD,QAGNrB,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,0BAAyBX,SAAA,EACtCN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,sCACJ8B,EAAAA,EAAAA,MAAA,OAAA9B,SAAA,EACEN,EAAAA,EAAAA,KAAC4E,EAAe,CAAC9D,KAAM4C,KACvB1D,EAAAA,EAAAA,KAAC4E,EAAe,CAAC9D,KAAM6C,WAG3BvB,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,gCAA+BX,SAAA,EAC5CN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,wBACJN,EAAAA,EAAAA,KAAC6E,EAAmB,CAAC/D,KAAMyD,QAE7BvE,EAAAA,EAAAA,KAAA,KAAGiB,UAAU,kBAAkB6D,KAAK,oBAAmBxE,SAAC,iBAK9D,E,UEQA,EAxDgB,SAAHM,GAAiB,ICZOmE,EDYlB3B,EAAGxC,EAAHwC,IACTa,EAAsDb,EAAtDa,GAAIZ,EAAkDD,EAAlDC,IAAKC,EAA6CF,EAA7CE,KAAMC,EAAuCH,EAAvCG,MAAOC,EAAgCJ,EAAhCI,KAAMM,EAA0BV,EAA1BU,YAAakB,EAAa5B,EAAb4B,SAEjDC,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAApC,EAAAA,EAAAA,GAAAkC,EAAA,GAA9CG,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,GAAmCC,EAAAA,EAAAA,MAA5BC,GAAiEzC,EAAAA,EAAAA,GAAAuC,EAAA,GAAzC,GCjBIP,EDkBdK,GCjBrB3D,EAAAA,EAAAA,YAAU,WAENgE,SAASC,KAAKC,MAAMC,SADlBb,EAC6B,SAEA,OAEnC,GAAG,CAACA,IDaJ,IAAMhB,EDpBsB,SAAHnD,GAQpB,IAPLoD,EAAOpD,EAAPoD,QACA6B,EAAajF,EAAbiF,cAAaC,EAAAlF,EACbmF,UAAAA,OAAS,IAAAD,EAAG,UAASA,EACrBzD,EAAIzB,EAAJyB,KACAkB,EAAK3C,EAAL2C,MACAU,EAAErD,EAAFqD,GACAN,EAAe/C,EAAf+C,gBAEMS,EAAaJ,EAAQnB,MAAM,KAoBjC,MAVe,CATCuB,EAAW,GAAGC,OACXD,EAAW,GAAGC,OACRwB,EACRE,EACD,GAAA7E,OAAGqB,EAAwBF,IAAQgC,OAClCd,EACH,GAAArC,OAAG+C,GAAKI,OACGV,EAAgB,GAa3C,CCV0BqC,CAAe5C,GAEjC6C,EAAoB,WACxBZ,GAAe,SAAAa,GAAI,OAAKA,CAAI,GAC9B,EAEMC,EAAoB,eAAAlE,GAAAmE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMrC,GAAE,OAAAoC,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAL,KAAAK,EAAAC,MAAA,OACnC,IACEhB,EAAyB,CAAEvB,GAAAA,EAAIe,UAAWA,GAG5C,CAFE,MAAOyB,GACPC,EAAAA,GAAAA,KAAW,wBACb,CAAC,wBAAAH,EAAAI,OAAA,GAAAL,EAAA,KACF,gBANyBM,GAAA,OAAA3E,EAAA4E,MAAA,KAAAC,UAAA,KAQ1B,OACE1E,EAAAA,EAAAA,MAAA,MAAA9B,SAAA,EACE8B,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,OAAMX,SAAA,EACnB8B,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,gBAAeX,SAAA,EAC5B8B,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,kBAAiBX,SAAA,EAC9BN,EAAAA,EAAAA,KAAA,OAAK2E,IAAKtB,EAAK0D,IAAKzD,EAAM0D,QAAQ,UAClChH,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAASL,QAAS,kBAAMmE,EAAqBlC,EAAG,EAAC3D,UAC5DN,EAAAA,EAAAA,KAACiH,EAAS,CAAChG,UAAW+D,EAAW,YAAc,WAGnD5C,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,oBAAmBX,SAAA,EAChC8B,EAAAA,EAAAA,MAAA,MAAA9B,SAAA,IAAAY,OACMoC,EAAI,MACRtD,EAAAA,EAAAA,KAAA,QAAAM,SAAOiD,IAAa,KAAArC,OACdsC,OAERxD,EAAAA,EAAAA,KAAA,KAAAM,SAAIwD,QAEN9D,EAAAA,EAAAA,KAAC4E,EAAe,CAAC9D,KAAMiD,EAAiB/C,KAAK,cAG/ChB,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAASpB,UAAU,YAAYe,QAASiE,EAAkB3F,SAAC,kBAIzE8E,IACCpF,EAAAA,EAAAA,KAACkH,EAAK,CAAC1F,aAAcyE,EAAkB3F,UACrCN,EAAAA,EAAAA,KAACmH,EAAY,CAAC/D,IAAKA,QAK7B,EElDA,EAdoB,SAAHxC,GAAuB,IAADC,EAAAD,EAAhBE,KAAAA,OAAI,IAAAD,EAAG,GAAEA,EAC9B,OAAOC,EAAKsG,QACVpH,EAAAA,EAAAA,KAAA,MAAIiB,UAAU,gBAAeX,SAC1BQ,EAAKK,KAAI,SAAAiC,GAAG,OACXpD,EAAAA,EAAAA,KAACqH,EAAO,CAAuCjE,IAAKA,GAAI,GAAAlC,OAAvCkC,EAAIE,KAAI,KAAApC,OAAIG,KAAKC,OAAO,IAAkB,OAI/DtB,EAAAA,EAAAA,KAAA,KAAGiB,UAAU,sBAAqBX,SAAC,0DAIvC,C,uDCfA,I,UCUA,EATgB,SAAHM,GAA6B,IAAvB0G,EAAK1G,EAAL0G,MAAOhH,EAAQM,EAARN,SACxB,OACE8B,EAAAA,EAAAA,MAAA,WAASnB,UAAU,UAASX,SAAA,CACzBgH,IAAStH,EAAAA,EAAAA,KAAA,MAAIiB,UAAU,iBAAgBX,SAAEgH,IACzChH,IAGP,C,gHCTaiH,EAAsB,SAAAC,GAAK,OAAIA,EAAMC,OAAQ,E,yFC8D1D,EAtDoB,SAAA1H,GAClB,IAAA2H,EAII3H,EAHFkE,GAAAA,OAAE,IAAAyD,EAAG,aAAYA,EAAAC,EAGf5H,EAFF6H,MAAAA,OAAK,IAAAD,EAAG,QAAOA,EAAAE,EAEb9H,EADF+H,MAAAA,OAAK,IAAAD,EAAG,CAAEE,KAAM,GAAIC,GAAI,IAAIH,EAG9B5C,GAAoCC,EAAAA,EAAAA,UAAS4C,GAAM3C,GAAApC,EAAAA,EAAAA,GAAAkC,EAAA,GAA5CgD,EAAU9C,EAAA,GAAE+C,EAAa/C,EAAA,GAE1BgD,EAAW,SAAAxG,GACV,YAAYyG,KAAKzG,EAAEO,OAAO4F,SAAUnG,EAAEO,OAAO4F,MAAMzD,OAKxD6D,GAAc,SAAAhC,GAAI,OAAAjG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbiG,GAAI,IAAAmC,EAAAA,EAAAA,GAAA,GACN1G,EAAEO,OAAOc,MAAOyB,EAAAA,EAAAA,GAAwB9C,EAAEO,OAAO4F,QAAM,IANxDpB,EAAAA,GAAAA,KAAW,4BAQf,EAEA,OACEtE,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,4BAA2BX,SAAA,EACxCN,EAAAA,EAAAA,KAAA,KAAAM,SAAIsH,KACJxF,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,0BAAyBX,SAAA,EACtC8B,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,wBAAuBX,SAAA,EACpCN,EAAAA,EAAAA,KAAA,SAAOsI,QAAO,GAAApH,OAAK+C,EAAE,SAAQ3D,SAAC,UAC9BN,EAAAA,EAAAA,KAAA,SACEgD,KAAM,OACN8E,MAAOG,EAAWF,KAClB9G,UAAU,cACVgD,GAAE,GAAA/C,OAAK+C,EAAE,SACT5B,KAAK,OACL8F,SAAUA,EACVI,aAAa,YAGjBnG,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,wBAAuBX,SAAA,EACpCN,EAAAA,EAAAA,KAAA,SAAOsI,QAAO,GAAApH,OAAK+C,EAAE,OAAM3D,SAAC,QAC5BN,EAAAA,EAAAA,KAAA,SACEgD,KAAM,KACN8E,MAAOG,EAAWD,GAClB/G,UAAU,YACVgD,GAAE,GAAA/C,OAAK+C,EAAE,OACT5B,KAAK,OACL8F,SAAUA,EACVI,aAAa,gBAMzB,EC3CA,EAhBwB,SAACxI,GAAK,OAC5BC,EAAAA,EAAAA,KAAA,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDN,GAAK,IAAAO,UAETN,EAAAA,EAAAA,KAAA,QACEO,cAAc,QACdC,eAAe,QACfE,YAAa,EACbC,EAAE,qBAEA,ECyDR,EAlEoB,SAAAZ,GAClB,IAAQiD,EAAgEjD,EAAhEiD,KAAMiB,EAA0DlE,EAA1DkE,GAAI2D,EAAsD7H,EAAtD6H,MAAKY,EAAiDzI,EAA/C0I,YAAAA,OAAW,IAAAD,EAAG,iBAAgBA,EAAEE,EAAe3I,EAAf2I,WAEzDzD,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAApC,EAAAA,EAAAA,GAAAkC,EAAA,GAApC0D,EAAMxD,EAAA,GAAEyD,EAASzD,EAAA,GACxB0D,GAA4C3D,EAAAA,EAAAA,UAAS,MAAK4D,GAAA/F,EAAAA,EAAAA,GAAA8F,EAAA,GAAnDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAuBxC,OAdArH,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACL,WAAXA,EAAEC,MACJgH,GAAU,EAEd,EAIA,OAFA/G,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACxC,CACF,GAAG,CAACiH,KAGFvG,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,qBAAoBX,SAAA,EACjCN,EAAAA,EAAAA,KAAA,KAAGiB,UAAU,kBAAiBX,SAAEsH,KAChCxF,EAAAA,EAAAA,MAAA,OAAKnB,UAAU,mBAAkBX,SAAA,EAC/B8B,EAAAA,EAAAA,MAAA,OACEnB,UAAS,oBAAAC,OAAsByH,EAAS,iBAAmB,IAC3D3G,QA3BS,WAAH,OAAS4G,GAAWD,EAAQ,EA2BhBrI,SAAA,EAElBN,EAAAA,EAAAA,KAAA,SACEqC,KAAK,OACL4B,GAAIA,EACJjB,KAAMA,EACN8E,MAAOiB,GAAkBN,EACzBQ,UAAU,EACVhI,UAAU,6BAEZjB,EAAAA,EAAAA,KAACkJ,EAAe,OAEjBP,IACC3I,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,2BAA0BX,UACvCN,EAAAA,EAAAA,KAAA,MAAIiB,UAAU,iBAAgBX,SAC3BoI,EAAWvH,KAAI,SAAAgI,GAAM,OACpBnJ,EAAAA,EAAAA,KAAA,MACEgD,KAAMA,EACNhB,SA3CQ8F,EA2CiBqB,EA3CR,WAC/BH,EAAkBlB,GAClBc,GAAU,EACZ,GA0CgB3H,UAAU,iBAAgBX,SAEzB6I,GAHI9H,KAAKC,UA5CF,IAAAwG,CAgDL,aAQrB,ECAA,EAzDe,SAAHlH,GAAyB,IAAnBwI,EAAWxI,EAAXwI,YACVC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYjC,GA8B3B,OACEnF,EAAAA,EAAAA,MAAA,QAAMnB,UAAU,SAASwI,SA7BA,SAAA9H,GAAM,IAAD+H,EAC9B/H,EAAEgI,iBAEF,IAAAC,EAAmCjI,EAAEO,OAAO2H,SAApCC,EAAKF,EAALE,MAAOC,EAAKH,EAALG,MAAOhC,EAAI6B,EAAJ7B,KAAMC,EAAE4B,EAAF5B,GAE5B,GACI8B,EAAMhC,OAAyB,mBAAhBgC,EAAMhC,OACrBiC,EAAMjC,OAAyB,SAAhBiC,EAAMjC,OACtBC,EAAKD,OACLE,EAAGF,MAJN,CAUA,IAAMkC,GAAUN,EAAA,IAAArB,EAAAA,EAAAA,GAAAqB,EACbI,EAAM9G,KAAuB,mBAAhB8G,EAAMhC,MAA6BgC,EAAMhC,MAAQ,KAAEO,EAAAA,EAAAA,GAAAqB,EAChEK,EAAM/G,KAAuB,SAAhB+G,EAAMjC,MAAmBiC,EAAMjC,MAAQ,KAAEO,EAAAA,EAAAA,GAAAqB,EAAC,UAC/C,CACP3B,MAAMkC,EAAAA,EAAAA,GAAuBlC,EAAKD,OAClCE,IAAIiC,EAAAA,EAAAA,GAAuBjC,EAAGF,UAC/BO,EAAAA,EAAAA,GAAAqB,EAAC,SACM,IAAEA,GAGZL,GAASa,EAAAA,EAAAA,GAAiBF,GAZ1B,MAFEtD,EAAAA,GAAAA,KAAW,8BAef,EAGwDpG,SAAA,EACpDN,EAAAA,EAAAA,KAACmK,EAAW,CACVnH,KAAK,QACL4E,MAAM,YACNE,MAAOyB,EAAOO,MACdpB,WAAYU,EAAYgB,UAE1BpK,EAAAA,EAAAA,KAACmK,EAAW,CACVnH,KAAK,QACL4E,MAAM,gBACNa,YAAY,OACZX,MAAOyB,EAAOQ,MACdrB,WAAYU,EAAYiB,UAE1BrK,EAAAA,EAAAA,KAACsK,EAAW,CACVtH,KAAK,UACL4E,MAAM,wBACNE,MAAOyB,EAAO1F,WAEhB7D,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAAQ/B,SAAC,aAG5B,E,UCsBA,EA1EgB,WACd,ICjBkCiK,EAAOC,EAAKC,EDiBxClB,GAASC,EAAAA,EAAAA,IAAYjC,GAEbmD,GAAYC,EAAAA,EAAAA,MAAlBC,KACR3F,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAApC,EAAAA,EAAAA,GAAAkC,EAAA,GAAnC4F,EAAO1F,EAAA,GAAE2F,EAAU3F,EAAA,GAC1B0D,GAAsC3D,EAAAA,EAAAA,UAAS,GAAE4D,GAAA/F,EAAAA,EAAAA,GAAA8F,EAAA,GAA1CkC,EAAWjC,EAAA,GAAEkC,EAAclC,EAAA,GAClCmC,GAA4BC,EAAAA,EAAAA,IAAsBH,GAA1CH,EAAIK,EAAJL,KAAMO,EAASF,EAATE,UAEVC,EAAc,CAChBhB,OAAQ,GACRC,OAAQ,IAINgB,EAAe,EACfC,EAAa,GAEZH,GAAaT,IAChBU,EAAc,CACZhB,OAAO,CAAE,OAAKlJ,QAAAsD,EAAAA,EAAAA,GAAK,IAAI+G,IAAIb,EAAQvJ,KAAI,SAAAP,GAAO,OAAAA,EAAJ0C,IAAe,OACzD+G,QCpC8BE,EDqC5B,ECrCmCC,EDsCnCnJ,KAAKmK,IAAG3E,MAARxF,MAAImD,EAAAA,EAAAA,GACC,IAAI+G,IACLb,EAAQvJ,KAAI,SAAAc,GAAc,OAAAA,EAAX6B,YAA8BX,QAAQ,OAAQ,GAAG,OCxC5BsH,ED2CxC,GC1CCgB,MAAM1D,KACX,CAAEX,OAAQ/F,KAAKqK,OAAOlB,EAAMD,GAASE,GAAQ,IAC7C,SAACkB,EAAGC,GAAK,OAAKrB,EAAQqB,EAAQnB,CAAI,MD6ClCa,GADAD,EAAeX,EAAQtD,QACU/F,KAAKwK,KAAKR,EAnBxB,IAmBU,IAG/B5J,EAAAA,EAAAA,YAAU,WACJmJ,GACFE,GAAW,SAAAgB,GAAW,SAAA5K,QAAAsD,EAAAA,EAAAA,GAAQsH,IAAWtH,EAAAA,EAAAA,GAAKoG,GAAI,GAEtD,GAAG,CAACA,IAEJ,IAAMmB,GAAkBC,EAAAA,EAAAA,UAAQ,WAC9B,OE1D8B,SAACtB,EAASjD,GAC1C,OAAOiD,EAAQnB,QAAO,SAACnG,GACrB,GACEqE,EAAQqC,OACR1G,EAAIE,OAASmE,EAAQqC,OACH,QAAlBrC,EAAQqC,MAER,OAAO,EAGT,GACErC,EAAQsC,OACRkC,OAAO7I,EAAIU,YAAYX,QAAQ,OAAQ,KAAO8I,OAAOxE,EAAQsC,OAE7D,OAAO,EAGT,GAAItC,EAAQ5D,QAAQkE,KAAK1D,QAAUoD,EAAQ5D,QAAQmE,GAAG3D,OAAQ,CAC5D,IAAA6H,EAAqBzE,EAAQ5D,QAArBkE,EAAImE,EAAJnE,KAAMC,EAAEkE,EAAFlE,GACRmE,EAAaF,OAAO7I,EAAIS,SAE9B,QACYuI,IAATrE,GAAsBoE,EAAaF,OAAOlE,SACnCqE,IAAPpE,GAAoBmE,EAAaF,OAAOjE,GAEzC,OAAO,CAEX,CAEA,OAAO,CACT,GACF,CF2BWqE,CAAmBxB,EAAStB,EACrC,GAAG,CAACsB,EAAStB,IAOb,OACEnH,EAAAA,EAAAA,MAACkK,EAAAA,EAAO,CAAAhM,SAAA,CACL6K,IAAanL,EAAAA,EAAAA,KAACuM,EAAAA,EAAM,KACnBpB,IACA/I,EAAAA,EAAAA,MAAAoK,EAAAA,SAAA,CAAAlM,SAAA,EACEN,EAAAA,EAAAA,KAACyM,EAAM,CAACrD,YAAagC,KACrBpL,EAAAA,EAAAA,KAAC0M,EAAAA,EAAW,CAAC5L,KAAMiL,KACnB/L,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,mBAAkBX,SAC9BgL,EAAaP,IACZ/K,EAAAA,EAAAA,KAAA,UACEqC,KAAK,SACLpB,UAAU,iBACVe,QAjBc,WAC1BgJ,GAAe,SAAA9E,GAAI,OAAIA,EAAO,CAAC,GAEjC,EAc2C5F,SAC9B,qBASf,C,8EGxFO,IAAMmE,EAA0B,SAACkI,GACtC,IAAMC,EAAsBD,EAAcxJ,QAAQ,KAAM,IAExD,GAAIyJ,EAAoBxF,OAAS,EAAG,CAGlC,IAFA,IAAMyF,EAAQ,GAELC,EAAIF,EAAoBxF,OAAQ0F,EAAI,EAAGA,GAAK,EACnDD,EAAME,QAAQH,EAAoBlK,MAAMrB,KAAKmK,IAAIsB,EAAI,EAAG,GAAIA,IAG9D,OAAOD,EAAMG,KAAK,IACpB,CACE,OAAOJ,CAEX,EAEa3C,EAAyB,SAAC0C,GAGrC,OAF4BA,EAAcxJ,QAAQ,KAAM,GAG1D,C","sources":["images/icons/HeartIcon.jsx","components/kit/DescriptionList/DescriptionList.jsx","images/icons/CloseIcon.jsx","components/Modal/Modal.jsx","utils/getOnlyFirstUpperLetter.js","components/kit/DescriptionChipList/DescriptionChipList.jsx","components/CarModalCard/CarModalCard.jsx","utils/getCarDescriptionList.js","components/CarCard/CarCard.jsx","hook/useDisableBodyScroll.js","components/AdvertsList/AdvertsList.jsx","webpack://react-homework-template/./src/components/kit/Section/Section.scss?f646","components/kit/Section/Section.jsx","redux/filters/filtersSelectors.js","components/kit/FromToField/FromToField.jsx","images/icons/ChevronDownIcon.jsx","components/kit/SelectField/SelectField.jsx","components/Filter/Filter.jsx","pages/Catalog/Catalog.jsx","utils/createArrayWithStep.js","utils/getFilteredAdverts.js","utils/formatingCommasToNumber.js"],"sourcesContent":["import * as React from \"react\";\nconst HeartIcon = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeOpacity={0.8}\n      strokeWidth={1.5}\n      d=\"M15.63 3.458a4.125 4.125 0 0 0-5.835 0L9 4.253l-.795-.795A4.126 4.126 0 0 0 2.37 9.293l.795.795L9 15.922l5.835-5.835.795-.795a4.125 4.125 0 0 0 0-5.835Z\"\n    />\n  </svg>\n);\nexport default HeartIcon;\n","import './DescriptionList.scss';\n\nconst DescriptionList = ({ list = [], size = 'large' }) => {\n  return (\n    <ul className={`description__list ${size}`}>\n      {list.map(item => (\n        <li key={`${item}_${Math.random(1)}`}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default DescriptionList;\n","import * as React from \"react\";\nconst CloseIcon = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    {...props}\n  >\n    <g\n      stroke=\"#121417\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.8}\n    >\n      <path d=\"M18 6 6 18M6 6l12 12\" />\n    </g>\n  </svg>\n);\nexport default CloseIcon;\n","import { useEffect } from 'react';\n\nimport CloseIcon from 'images/icons/CloseIcon';\n\nimport './Modal.scss';\n\nconst Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <div className=\"overlay\" onClick={handleBackdropClick}>\n      <div className=\"modal__content\">\n        <button type=\"button\" className=\"modal__close-btn\">\n          <CloseIcon\n            onClick={() => {\n              onCloseModal();\n            }}\n          />\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","export const getOnlyFirstUpperLetter = (word) => {\n  if (typeof word !== \"string\") return;\n\n  const capFirstLetter = word[0].toUpperCase();\n  const restOfWordLower = word.slice(1).toLowerCase();\n\n  const result = capFirstLetter + restOfWordLower;\n  return result;\n};\n","import './DescriptionChipList.scss';\n\nconst DescriptionChipList = ({ list }) => {\n  return (\n    <ul className=\"chip__list\">\n      {list.map(item => {\n        let [name, number] = item.split(': ');\n        if (typeof number === 'string') {\n          const newNumber = number.replace(/(\\$)(\\d+)/, '$2$1');\n          number = newNumber;\n        }\n\n        return (\n          <li className=\"chip__item\" key={name}>\n            {!number ? name : `${name}: `}\n            {number && <span>{number}</span>}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default DescriptionChipList;\n","import { getCarDetailsDescList } from 'utils/getCarDescriptionList';\nimport { formatingCommasToNumber } from 'utils/formatingCommasToNumber';\n\nimport DescriptionList from '../kit/DescriptionList/DescriptionList';\nimport DescriptionChipList from '../kit/DescriptionChipList/DescriptionChipList';\n\nimport './CarModalCard.scss';\n\nfunction CarModalCard({ car }) {\n  const {\n    img,\n    make,\n    model,\n    year,\n    description,\n    accessories,\n    functionalities,\n    rentalConditions,\n    mileage,\n    rentalPrice,\n  } = car;\n  const descriptionList = getCarDetailsDescList(car);\n\n  const rentalConditionsArray = [\n    ...rentalConditions.split('\\n'),\n    `Milage: ${formatingCommasToNumber(mileage.toString())}`,\n    `Price: ${rentalPrice}`,\n  ];\n\n  return (\n    <div className=\"card-modal\">\n      <img\n        className=\"card-modal__img\"\n        src={img}\n        aria-label={`${make} ${model}`}\n      />\n      <div className=\"card-modal__car-header\">\n        <h3>\n          {`${make} `}\n          <span>{model}</span>\n          {`, ${year}`}\n        </h3>\n        <DescriptionList list={descriptionList} size=\"medium\" />\n        <p>{description}</p>\n      </div>\n\n      <div className=\"card-modal__accessories\">\n        <h4>Accessories and functionalities:</h4>\n        <div>\n          <DescriptionList list={accessories} />\n          <DescriptionList list={functionalities} />\n        </div>\n      </div>\n      <div className=\"card-modal__rental-conditions\">\n        <h4>Rental Conditions:</h4>\n        <DescriptionChipList list={rentalConditionsArray} />\n      </div>\n      <a className=\"card-modal__btn\" href=\"tel:+380730000000\">\n        Rental Car\n      </a>\n    </div>\n  );\n}\n\nexport default CarModalCard;\n","import { getOnlyFirstUpperLetter } from \"./getOnlyFirstUpperLetter\";\n\nexport const getCarDescList = ({\n  address,\n  rentalCompany,\n  typeClass = \"Premium\",\n  type,\n  model,\n  id,\n  functionalities,\n}) => {\n  const carAddress = address.split(\",\");\n  const carCity = carAddress[1].trim();\n  const carCountry = carAddress[2].trim();\n  const carRentalCompany = rentalCompany;\n  const carClass = typeClass;\n  const carType = `${getOnlyFirstUpperLetter(type)}`.trim();\n  const carModel = model;\n  const carId = `${id}`.trim();\n  const catFunctionality = functionalities[0];\n\n  const result = [\n    carCity,\n    carCountry,\n    carRentalCompany,\n    carClass,\n    carType,\n    carModel,\n    carId,\n    catFunctionality,\n  ];\n  return result;\n};\n\nexport const getCarDetailsDescList = ({\n  address,\n  id,\n  year,\n  type,\n  fuelConsumption,\n  engineSize,\n}) => {\n  const carAddress = address.split(\",\");\n  const carCity = carAddress[1].trim();\n  const carCountry = carAddress[2].trim();\n  const carId = `Id: ${id}`.trim();\n  const carYear = `Year: ${year}`.trim();\n  const carType = `Type: ${getOnlyFirstUpperLetter(type)}`.trim();\n  const carFuelConsumption = `Fuel Consumption: ${fuelConsumption}`.trim();\n  const carEngineSize = `Engine Size: ${engineSize}`.trim();\n\n  const result = [\n    carCity,\n    carCountry,\n    carId,\n    carYear,\n    carType,\n    carFuelConsumption,\n    carEngineSize,\n  ];\n  return result;\n};\n","import { useState } from 'react';\n\nimport { toast } from 'react-toastify';\n\nimport HeartIcon from 'images/icons/HeartIcon';\n\nimport './CarCard.scss';\nimport DescriptionList from 'components/kit/DescriptionList/DescriptionList';\nimport Modal from 'components/Modal/Modal';\nimport CarModalCard from 'components/CarModalCard/CarModalCard';\nimport { useUpdateFavoriteAdvertByIdMutation } from '../../redux/adverts/advertsSlice';\nimport { useDisableBodyScroll } from 'hook/useDisableBodyScroll';\nimport { getCarDescList } from 'utils/getCarDescriptionList';\n\nconst CarCard = ({ car }) => {\n  const { id, img, make, model, year, rentalPrice, favorite } = car;\n\n  const [isShowModal, setIsShowModal] = useState(false);\n\n  const [updateFavoriteAdvertById] = useUpdateFavoriteAdvertByIdMutation();\n  useDisableBodyScroll(isShowModal);\n\n  const descriptionList = getCarDescList(car);\n\n  const handleToggleModal = () => {\n    setIsShowModal(prev => !prev);\n  };\n\n  const handleToggleFavorite = async id => {\n    try {\n      updateFavoriteAdvertById({ id, favorite: !favorite });\n    } catch (error) {\n      toast.warn('Sorry something wrong');\n    }\n  };\n\n  return (\n    <li>\n      <div className=\"card\">\n        <div className=\"card__wrapper\">\n          <div className=\"card__thumb-img\">\n            <img src={img} alt={make} loading=\"lazy\" />\n            <button type=\"button\" onClick={() => handleToggleFavorite(id)}>\n              <HeartIcon className={favorite ? 'favorited' : ''} />\n            </button>\n          </div>\n          <div className=\"card__thumb-title\">\n            <h3>\n              {`${make} `}\n              <span>{model}</span>\n              {`, ${year}`}\n            </h3>\n            <p>{rentalPrice}</p>\n          </div>\n          <DescriptionList list={descriptionList} size=\"small\" />\n        </div>\n\n        <button type=\"button\" className=\"card__btn\" onClick={handleToggleModal}>\n          Learn more\n        </button>\n      </div>\n      {isShowModal && (\n        <Modal onCloseModal={handleToggleModal}>\n          <CarModalCard car={car} />\n        </Modal>\n      )}\n    </li>\n  );\n};\n\nexport default CarCard;\n","import { useEffect } from \"react\";\n\nexport const useDisableBodyScroll = (open) => {\n  useEffect(() => {\n    if (open) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n  }, [open]);\n};\n","import CarCard from 'components/CarCard/CarCard';\n\nimport './AdvertsList.scss';\n\nconst AdvertsList = ({ list = [] }) => {\n  return list.length ? (\n    <ul className=\"adverts__list\">\n      {list.map(car => (\n        <CarCard key={`${car.make}_${Math.random(1)}`} car={car} />\n      ))}\n    </ul>\n  ) : (\n    <p className=\"adverts__no-content\">\n      Sorry, there are no cars with this request in stock...\n    </p>\n  );\n};\n\nexport default AdvertsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"fontSize\":\"12px\",\"headingsFontSize\":\"18px\",\"headingsSecondFontSize\":\"14px\",\"standartSize\":\"16px\",\"bgColor\":\"#fff\",\"bgDarkColor\":\"#262626\",\"bgSecondColor\":\"#f7f7fb\",\"headingsColor\":\"#121417\",\"headingsSecondColor\":\"#8a8a89\",\"descColor\":\"rgba(18,20,23,.5)\",\"descSecondColor\":\"#000\",\"accentColor\":\"#3470ff\",\"hoverColor\":\"#0b44cd\",\"borderColor\":\"rgba(18,20,23,.1)\",\"whiteColor\":\"#fff\",\"blackColor\":\"#121417\",\"desktop\":\"91.25em\"};","import './Section.scss';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className=\"section\">\n      {title && <h2 className=\"section__title\">{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","export const selectAdvertsFilter = state => state.filters;\n","import { useState } from 'react';\n\nimport { toast } from 'react-toastify';\n\nimport { formatingCommasToNumber } from 'utils/formatingCommasToNumber';\n\nimport './FromToField.scss';\n\nconst FromToField = props => {\n  const {\n    id = 'text-input',\n    label = 'label',\n    value = { from: '', to: '' },\n  } = props;\n\n  const [fieldValue, setFieldValue] = useState(value);\n\n  const onChange = e => {\n    if (!/^[0-9,]+$/.test(e.target.value) && e.target.value.trim()) {\n      toast.warn('Please write only numbers');\n      return;\n    }\n\n    setFieldValue(prev => ({\n      ...prev,\n      [e.target.name]: formatingCommasToNumber(e.target.value),\n    }));\n  };\n\n  return (\n    <div className=\"input-fromto-field__group\">\n      <p>{label}</p>\n      <div className=\"input-fromto__container\">\n        <div className=\"input-fromto__wrapper\">\n          <label htmlFor={`${id}_from`}>From</label>\n          <input\n            name={'from'}\n            value={fieldValue.from}\n            className=\"input__from\"\n            id={`${id}_from`}\n            type=\"text\"\n            onChange={onChange}\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"input-fromto__wrapper\">\n          <label htmlFor={`${id}_to`}>To</label>\n          <input\n            name={'to'}\n            value={fieldValue.to}\n            className=\"input__to\"\n            id={`${id}_to`}\n            type=\"text\"\n            onChange={onChange}\n            autoComplete=\"off\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FromToField;\n","import * as React from \"react\";\nconst ChevronDownIcon = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"m5 7.5 5 5 5-5\"\n    />\n  </svg>\n);\nexport default ChevronDownIcon;\n","import { useEffect, useState } from 'react';\n\nimport ChevronDownIcon from 'images/icons/ChevronDownIcon';\n\nimport './SelectField.scss';\n\nconst SelectField = props => {\n  const { name, id, label, placeholder = 'Enter the text', optionList } = props;\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = value => () => {\n    setSelectedOption(value);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        setIsOpen(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [isOpen]);\n\n  return (\n    <div className=\"dropdown__cotainer\">\n      <p className=\"dropdown__label\">{label}</p>\n      <div className=\"dropdown__select\">\n        <div\n          className={`dropdown__header ${isOpen ? 'dropdown__open' : ''}`}\n          onClick={toggling}\n        >\n          <input\n            type=\"text\"\n            id={id}\n            name={name}\n            value={selectedOption || placeholder}\n            readOnly={true}\n            className=\"dropdown__select--input\"\n          />\n          <ChevronDownIcon />\n        </div>\n        {isOpen && (\n          <div className=\"dropdown__list-container\">\n            <ul className=\"dropdown__list\">\n              {optionList.map(option => (\n                <li\n                  name={name}\n                  onClick={onOptionClicked(option)}\n                  key={Math.random()}\n                  className=\"dropdown__item\"\n                >\n                  {option}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectField;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectAdvertsFilter } from '../../redux/filters/filtersSelectors';\nimport { setAdvertsFilter } from '../../redux/filters/filtersSlice';\n\nimport { removeCommasFromString } from 'utils/formatingCommasToNumber';\n\nimport FromToField from 'components/kit/FromToField/FromToField';\nimport SelectField from 'components/kit/SelectField/SelectField';\n\nimport './Filter.scss';\nimport { toast } from 'react-toastify';\n\nconst Filter = ({ filtersList }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectAdvertsFilter);\n\n  const handleChangeFilter = e => {\n    e.preventDefault();\n\n    const { brand, price, from, to } = e.target.elements;\n\n    if (\n      (!brand.value || brand.value === 'Enter the text') &&\n      (!price.value || price.value === 'To $') &&\n      !from.value &&\n      !to.value\n    ) {\n      toast.info('Please chose one of filters');\n      return;\n    }\n\n    const newfilters = {\n      [brand.name]: brand.value !== 'Enter the text' ? brand.value : '',\n      [price.name]: price.value !== 'To $' ? price.value : '',\n      mileage: {\n        from: removeCommasFromString(from.value),\n        to: removeCommasFromString(to.value),\n      },\n      prices: [],\n    };\n\n    dispatch(setAdvertsFilter(newfilters));\n  };\n\n  return (\n    <form className=\"filter\" onSubmit={handleChangeFilter}>\n      <SelectField\n        name=\"brand\"\n        label=\"Car brand\"\n        value={filter.brand}\n        optionList={filtersList.brands}\n      />\n      <SelectField\n        name=\"price\"\n        label=\"Price/ 1 hour\"\n        placeholder=\"To $\"\n        value={filter.price}\n        optionList={filtersList.prices}\n      />\n      <FromToField\n        name=\"mileage\"\n        label=\"Сar mileage / km\"\n        value={filter.mileage}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default Filter;\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport './Catalog.scss';\nimport { selectAdvertsFilter } from '../../redux/filters/filtersSelectors';\nimport {\n  useGetAdvertsQuery,\n  useGetCarsByPageQuery,\n} from '../../redux/adverts/advertsSlice';\nimport { getFilteredAdverts } from 'utils/getFilteredAdverts';\nimport { createArrayWithStep } from 'utils/createArrayWithStep';\nimport Section from 'components/kit/Section/Section';\nimport Loader from 'components/kit/Loader/Loader';\nimport Filter from 'components/Filter/Filter';\nimport AdvertsList from 'components/AdvertsList/AdvertsList';\n\nconst Catalog = () => {\n  const filter = useSelector(selectAdvertsFilter);\n\n  const { data: adverts } = useGetAdvertsQuery();\n  const [allCars, setAllCars] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const { data, isLoading } = useGetCarsByPageQuery(currentPage);\n\n  let dataFilters = {\n    brands: [],\n    prices: [],\n  };\n\n  const limitAdverts = 12;\n  let totalAdverts = 0;\n  let totalPages = 0;\n\n  if (!isLoading && adverts) {\n    dataFilters = {\n      brands: ['All', ...new Set(adverts.map(({ make }) => make))],\n      prices: createArrayWithStep(\n        0,\n        Math.max(\n          ...new Set(\n            adverts.map(({ rentalPrice }) => rentalPrice.replace(/(\\$)/, ''))\n          )\n        ),\n        10\n      ),\n    };\n\n    totalAdverts = adverts.length;\n    totalPages = !totalAdverts ? 1 : Math.ceil(totalAdverts / limitAdverts);\n  }\n\n  useEffect(() => {\n    if (data) {\n      setAllCars(prevCatalog => [...prevCatalog, ...data]);\n    }\n  }, [data]);\n\n  const filteredAdverts = useMemo(() => {\n    return getFilteredAdverts(allCars, filter);\n  }, [allCars, filter]);\n\n  const handleClickLoadMore = () => {\n    setCurrentPage(prev => prev + 1);\n    // window.scrollTo(0, 0);\n  };\n\n  return (\n    <Section>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <>\n          <Filter filtersList={dataFilters} />\n          <AdvertsList list={filteredAdverts} />\n          <div className=\"buttons__wrapper\">\n            {totalPages > currentPage && (\n              <button\n                type=\"button\"\n                className=\"load-more__btn\"\n                onClick={handleClickLoadMore}\n              >\n                Load more\n              </button>\n            )}\n          </div>\n        </>\n      )}\n    </Section>\n  );\n};\n\nexport default Catalog;\n","export const createArrayWithStep = (start, end, step) => {\n  return Array.from(\n    { length: Math.floor((end - start) / step) + 1 },\n    (_, index) => start + index * step\n  );\n};\n","export const getFilteredAdverts = (adverts, filters) => {\n  return adverts.filter((car) => {\n    if (\n      filters.brand &&\n      car.make !== filters.brand &&\n      filters.brand !== \"All\"\n    ) {\n      return false;\n    }\n\n    if (\n      filters.price &&\n      Number(car.rentalPrice.replace(/(\\$)/, \"\")) > Number(filters.price)\n    ) {\n      return false;\n    }\n\n    if (filters.mileage.from.trim() || filters.mileage.to.trim()) {\n      const { from, to } = filters.mileage;\n      const carMileage = Number(car.mileage);\n\n      if (\n        (from !== undefined && carMileage < Number(from)) ||\n        (to !== undefined && carMileage > Number(to))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n","export const formatingCommasToNumber = (stringNumbers) => {\n  const stringWithoutCommas = stringNumbers.replace(/,/g, \"\");\n\n  if (stringWithoutCommas.length > 3) {\n    const parts = [];\n\n    for (let i = stringWithoutCommas.length; i > 0; i -= 3) {\n      parts.unshift(stringWithoutCommas.slice(Math.max(i - 3, 0), i));\n    }\n\n    return parts.join(\",\");\n  } else {\n    return stringWithoutCommas;\n  }\n};\n\nexport const removeCommasFromString = (stringNumbers) => {\n  const stringWithoutCommas = stringNumbers.replace(/,/g, \"\");\n\n  return stringWithoutCommas;\n};\n"],"names":["props","_jsx","_objectSpread","xmlns","width","height","fill","children","strokeLinecap","strokeLinejoin","strokeOpacity","strokeWidth","d","_ref","_ref$list","list","_ref$size","size","className","concat","map","item","Math","random","stroke","onCloseModal","useEffect","handleKeydown","e","code","window","addEventListener","removeEventListener","onClick","_ref2","target","currentTarget","_jsxs","type","CloseIcon","getOnlyFirstUpperLetter","word","toUpperCase","slice","toLowerCase","_item$split","split","_item$split2","_slicedToArray","name","number","newNumber","replace","car","img","make","model","year","description","accessories","functionalities","rentalConditions","mileage","rentalPrice","descriptionList","address","id","fuelConsumption","engineSize","carAddress","trim","getCarDetailsDescList","rentalConditionsArray","_toConsumableArray","formatingCommasToNumber","toString","src","DescriptionList","DescriptionChipList","href","open","favorite","_useState","useState","_useState2","isShowModal","setIsShowModal","_useUpdateFavoriteAdv","useUpdateFavoriteAdvertByIdMutation","updateFavoriteAdvertById","document","body","style","overflow","rentalCompany","_ref$typeClass","typeClass","getCarDescList","handleToggleModal","prev","handleToggleFavorite","_asyncToGenerator","_regeneratorRuntime","_callee","_context","next","error","toast","stop","_x","apply","arguments","alt","loading","HeartIcon","Modal","CarModalCard","length","CarCard","title","selectAdvertsFilter","state","filters","_props$id","_props$label","label","_props$value","value","from","to","fieldValue","setFieldValue","onChange","test","_defineProperty","htmlFor","autoComplete","_props$placeholder","placeholder","optionList","isOpen","setIsOpen","_useState3","_useState4","selectedOption","setSelectedOption","readOnly","ChevronDownIcon","option","filtersList","dispatch","useDispatch","filter","useSelector","onSubmit","_newfilters","preventDefault","_e$target$elements","elements","brand","price","newfilters","removeCommasFromString","setAdvertsFilter","SelectField","brands","prices","FromToField","start","end","step","adverts","useGetAdvertsQuery","data","allCars","setAllCars","currentPage","setCurrentPage","_useGetCarsByPageQuer","useGetCarsByPageQuery","isLoading","dataFilters","totalAdverts","totalPages","Set","max","Array","floor","_","index","ceil","prevCatalog","filteredAdverts","useMemo","Number","_filters$mileage","carMileage","undefined","getFilteredAdverts","Section","Loader","_Fragment","Filter","AdvertsList","stringNumbers","stringWithoutCommas","parts","i","unshift","join"],"sourceRoot":""}